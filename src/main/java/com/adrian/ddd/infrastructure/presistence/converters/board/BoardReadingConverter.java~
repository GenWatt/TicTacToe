package com.adrian.ddd.infrastructure.presistence.converters.coard;

import com.adrian.ddd.domain.models.valueObject.Board;
import com.adrian.ddd.domain.models.valueObject.Player;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.core.convert.converter.Converter;
import org.springframework.data.convert.ReadingConverter;

@ReadingConverter
public class BoardReadingConverter implements Converter<String, Board> {
    private static final ObjectMapper objectMapper = new ObjectMapper();

    @Override
    public Board convert(String source) {
        try {
            Player[][] cells = objectMapper.readValue(source, Player[][].class);
            return new Board(cells);
        } catch (JsonProcessingException e) {
            throw new RuntimeException("Failed to deserialize board", e);
        }
    }
}